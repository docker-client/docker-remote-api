/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport",
)

package de.gesellix.docker.remote.api

import com.squareup.moshi.Json
import com.squareup.moshi.JsonClass

/**
 * Health stores information about the container's healthcheck results.
 *
 * @param status Status is one of `none`, `starting`, `healthy` or `unhealthy`  - \"none\"      Indicates there is no healthcheck - \"starting\"  Starting indicates that the container is not yet ready - \"healthy\"   Healthy indicates that the container is running correctly - \"unhealthy\" Unhealthy indicates that the container has a problem
 * @param failingStreak FailingStreak is the number of consecutive failures
 * @param log Log contains the last few results (oldest first)
 */
@JsonClass(generateAdapter = true)
data class Health(
    // Status is one of `none`, `starting`, `healthy` or `unhealthy`  - \"none\"      Indicates there is no healthcheck - \"starting\"  Starting indicates that the container is not yet ready - \"healthy\"   Healthy indicates that the container is running correctly - \"unhealthy\" Unhealthy indicates that the container has a problem
    @Json(name = "Status")
    var status: Health.Status? = null,
    // FailingStreak is the number of consecutive failures
    @Json(name = "FailingStreak")
    var failingStreak: kotlin.Int? = null,
    // Log contains the last few results (oldest first)
    @Json(name = "Log")
    var log: kotlin.collections.MutableList<HealthcheckResult>? = null,
) {
    /**
     * Status is one of `none`, `starting`, `healthy` or `unhealthy`  - \"none\"      Indicates there is no healthcheck - \"starting\"  Starting indicates that the container is not yet ready - \"healthy\"   Healthy indicates that the container is running correctly - \"unhealthy\" Unhealthy indicates that the container has a problem
     *
     * Values: None,Starting,Healthy,Unhealthy
     */
    @JsonClass(generateAdapter = false)
    enum class Status(val value: kotlin.String) {
        @Json(name = "none")
        None("none"),

        @Json(name = "starting")
        Starting("starting"),

        @Json(name = "healthy")
        Healthy("healthy"),

        @Json(name = "unhealthy")
        Unhealthy("unhealthy"),
    }
}

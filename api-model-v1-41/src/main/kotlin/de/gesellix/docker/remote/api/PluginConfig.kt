/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport",
)

package de.gesellix.docker.remote.api

import com.squareup.moshi.Json
import com.squareup.moshi.JsonClass

/**
 * The config of a plugin.
 *
 * @param description
 * @param documentation
 * @param `interface`
 * @param entrypoint
 * @param workDir
 * @param network
 * @param linux
 * @param propagatedMount
 * @param ipcHost
 * @param pidHost
 * @param mounts
 * @param env
 * @param args
 * @param dockerVersion Docker Version used to create the plugin
 * @param user
 * @param rootfs
 */
@JsonClass(generateAdapter = true)
data class PluginConfig(
    @Json(name = "Description")
    var description: kotlin.String,
    @Json(name = "Documentation")
    var documentation: kotlin.String,
    @Json(name = "Interface")
    var `interface`: PluginConfigInterface,
    @Json(name = "Entrypoint")
    var entrypoint: kotlin.collections.MutableList<kotlin.String>,
    @Json(name = "WorkDir")
    var workDir: kotlin.String,
    @Json(name = "Network")
    var network: PluginConfigNetwork,
    @Json(name = "Linux")
    var linux: PluginConfigLinux,
    @Json(name = "PropagatedMount")
    var propagatedMount: kotlin.String,
    @Json(name = "IpcHost")
    var ipcHost: kotlin.Boolean,
    @Json(name = "PidHost")
    var pidHost: kotlin.Boolean,
    @Json(name = "Mounts")
    var mounts: kotlin.collections.MutableList<PluginMount>,
    @Json(name = "Env")
    var env: kotlin.collections.MutableList<PluginEnv>,
    @Json(name = "Args")
    var args: PluginConfigArgs,
    // Docker Version used to create the plugin
    @Json(name = "DockerVersion")
    var dockerVersion: kotlin.String? = null,
    @Json(name = "User")
    var user: PluginConfigUser? = null,
    @Json(name = "rootfs")
    var rootfs: PluginConfigRootfs? = null,
)
